##########################################
# COMMON PROPERTIES
##########################################

# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------

# IDENTITY (ContextIdApplicationContextInitializer)
spring.application.name=@project.name@

# ADMIN (SpringApplicationAdminJmxAutoConfiguration)
#spring.application.admin.enabled=false # Whether to enable admin features for the application.

# AUTO-CONFIGURATION
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration

# SPRING CACHE (CacheProperties)
#spring.cache.type= # Cache type. By default, auto-detected according to the environment.



# ----------------------------------------
# WEB PROPERTIES
# ----------------------------------------

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
#server.error.include-exception=false # Include the "exception" attribute.
#server.error.include-stacktrace=never # When to include a "stacktrace" attribute.
server.error.path=/globalError

# MULTIPART (MultipartProperties)
#spring.servlet.multipart.max-file-size=1MB # Max file size. Values can use the suffixes "MB" or "KB" to indicate megabytes or kilobytes, respectively.
#spring.servlet.multipart.max-request-size=10MB # Max request size. Values can use the suffixes "MB" or "KB" to indicate megabytes or kilobytes, respectively.


# SPRING MVC (WebMvcProperties)
spring.mvc.date-format=yyyy/MM/dd
spring.mvc.static-path-pattern=/public/**
spring.mvc.throw-exception-if-no-handler-found=true

# SPRING RESOURCES HANDLING (ResourceProperties)
spring.resources.cache.cachecontrol.max-age=86400
spring.resources.cache.cachecontrol.cache-public=true

# SPRING SESSION (SessionProperties)
#spring.session.store-type= # Session store type.

# SPRING SESSION REDIS (RedisSessionProperties)
#spring.session.redis.cleanup-cron=0 * * * * * # Cron expression for expired session cleanup job.

# ----------------------------------------
# DATA PROPERTIES
# ----------------------------------------

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.continue-on-error=false # Whether to stop if an error occurs while initializing the database.
#spring.datasource.data= # Data (DML) script resource references.
#spring.datasource.data-username= # Username of the database to execute DML scripts (if different).
#spring.datasource.data-password= # Password of the database to execute DML scripts (if different).
#spring.datasource.driver-class-name= # Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
#spring.datasource.generate-unique-name=false # Whether to generate a random datasource name.
#spring.datasource.hikari.*= # Hikari specific settings
#spring.datasource.initialization-mode=embedded # Initialize the datasource with available DDL and DML scripts.
#spring.datasource.jmx-enabled=false # Whether to enable JMX support (if provided by the underlying pool).
#spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username & password are ignored when set.
#spring.datasource.name=testdb # Name of the datasource.
#spring.datasource.password= # Login password of the database.
#spring.datasource.platform=all # Platform to use in the DDL or DML scripts (such as schema-${platform}.sql or data-${platform}.sql).
#spring.datasource.schema= # Schema (DDL) script resource references.
#spring.datasource.schema-username= # Username of the database to execute DDL scripts (if different).
#spring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).
#spring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
#spring.datasource.url= # JDBC URL of the database.
#spring.datasource.username= # Login username of the database.

# H2 Web Console (H2ConsoleProperties)
spring.h2.console.enabled=false

# REDIS (RedisProperties)
#spring.redis.url= # Connection URL. Overrides host, port, and password. User is ignored. Example: redis://user:password@example.com:6379
#spring.redis.host=localhost # Redis server host.
#spring.redis.jedis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.jedis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.jedis.pool.max-wait=-1ms # Maximum amount of time a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.jedis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
#spring.redis.password= # Login password of the redis server.
#spring.redis.port=6379 # Redis server port.

mybatis.mapper-locations=classpath*:/sqls/**/*.xml
mybatis.type-aliases-package=net.sinsengumi.sampleapp.model
mybatis.type-handlers-package=net.sinsengumi.sampleapp.model.typehandler
mybatis.configuration.local-cache-scope=STATEMENT
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.jdbc-type-for-null=NULL
mybatis.configuration.auto-mapping-unknown-column-behavior=WARNING


build.version=@project.version@

